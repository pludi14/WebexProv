Index: oauth/flask_oauth.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nimport requests\nimport json\n\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__, template_folder='.')\n\nclientID = \"Cbbb54d9e35aa736ef45c2e21b3cef7d5d44f0dbf86535732768540c456e13b63\"\nsecretID = \"052ac0a80718fc4471128a5db6185a03c3786c2ec631ee1efd73909f528a20d1\"\nredirectURI = \"http://localhost:10060/oauth\"  # This could be different if you publicly expose this endpoint.\n\n\ndef get_tokens(code):\n    \"\"\"Gets access token and refresh token\"\"\"\n    print\n    \"code:\", code\n    url = \"https://api.webex.com/v1/access_token\"\n    headers = {'accept': 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n    payload = (\"grant_type=authorization_code&client_id={0}&client_secret={1}&\"\n               \"code={2}&redirect_uri={3}\").format(clientID, secretID, code, redirectURI)\n    req = requests.post(url=url, data=payload, headers=headers)\n    results = json.loads(req.text)\n    print\n    results\n    access_token = results[\"access_token\"]\n    refresh_token = results[\"refresh_token\"]\n    return access_token, refresh_token\n\n\ndef get_oauthuser_info(access_token):\n    \"\"\"Retreives OAuth user's details.\"\"\"\n    url = \"https://api.webex.com/v1/people/me\"\n    headers = {'accept': 'application/json', 'Content-Type': 'application/json',\n               'Authorization': 'Bearer ' + access_token}\n    req = requests.get(url=url, headers=headers)\n    results = json.loads(req.text)\n    personID = results[\"id\"]\n    emailID = results[\"emails\"][0]\n    displayName = results[\"displayName\"]\n    return personID, emailID, displayName\n\n\n@app.route(\"/\")\ndef main_page():\n    \"\"\"Main Grant page\"\"\"\n    return render_template(\"index.html\")\n\n\n@app.route(\"/oauth\")  # Endpoint acting as Redirect URI.\ndef oauth():\n    \"\"\"Retrieves oauth code to generate tokens for users\"\"\"\n\n    if \"code\" in request.args and state == \"YOUR_STATE_STRING\":\n        state = request.args.get(\"state\")  # Captures value of the state.\n        code = request.args.get(\"code\")  # Captures value of the code.\n        print\n        \"OAuth code:\", code\n        print\n        \"OAuth state:\", state\n        access_token, refresh_token = get_tokens(\n            code)  # As you can see, get_tokens() uses the code and returns access and refresh tokens.\n\n        # Now, let's do something with the generated token: Get the user's info: PersonId, Email Address and DisplayName.\n        personID, emailID, displayName = get_oauthuser_info(access_token)\n        print\n        \"personID:\", personID\n        print\n        \"email ID:\", emailID\n        print\n        \"display Name\", displayName\n        return render_template(\"granted.html\")\n    else:\n        return render_template(\"index.html\")\n\n\nif __name__ == '__main__':\n    app.run(\"0.0.0.0\", port=10060, debug=False)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oauth/flask_oauth.py	(revision 92f3492209677e9067e2e478bb91475d859c9798)
+++ oauth/flask_oauth.py	(date 1602495154066)
@@ -13,16 +13,14 @@
 
 def get_tokens(code):
     """Gets access token and refresh token"""
-    print
-    "code:", code
-    url = "https://api.webex.com/v1/access_token"
+    print("code:", code)
+    url = "https://webexapis.com/v1/access_token"
     headers = {'accept': 'application/json', 'content-type': 'application/x-www-form-urlencoded'}
     payload = ("grant_type=authorization_code&client_id={0}&client_secret={1}&"
                "code={2}&redirect_uri={3}").format(clientID, secretID, code, redirectURI)
     req = requests.post(url=url, data=payload, headers=headers)
     results = json.loads(req.text)
-    print
-    results
+    print(results)
     access_token = results["access_token"]
     refresh_token = results["refresh_token"]
     return access_token, refresh_token
@@ -30,7 +28,7 @@
 
 def get_oauthuser_info(access_token):
     """Retreives OAuth user's details."""
-    url = "https://api.webex.com/v1/people/me"
+    url = "https://webexapis.com/v1/people/me"
     headers = {'accept': 'application/json', 'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + access_token}
     req = requests.get(url=url, headers=headers)
@@ -51,15 +49,12 @@
 def oauth():
     """Retrieves oauth code to generate tokens for users"""
 
-    if "code" in request.args and state == "YOUR_STATE_STRING":
+    if "code" in request.args and request.args.get("state") == "geht":
         state = request.args.get("state")  # Captures value of the state.
         code = request.args.get("code")  # Captures value of the code.
-        print
-        "OAuth code:", code
-        print
-        "OAuth state:", state
-        access_token, refresh_token = get_tokens(
-            code)  # As you can see, get_tokens() uses the code and returns access and refresh tokens.
+        print("OAuth code:", code)
+        print("OAuth state:", state)
+        access_token, refresh_token = get_tokens(code)  # As you can see, get_tokens() uses the code and returns access and refresh tokens.
 
         # Now, let's do something with the generated token: Get the user's info: PersonId, Email Address and DisplayName.
         personID, emailID, displayName = get_oauthuser_info(access_token)
Index: .idea/WebexCallingProv.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.7\" jdkType=\"Python SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/WebexCallingProv.iml	(revision 92f3492209677e9067e2e478bb91475d859c9798)
+++ .idea/WebexCallingProv.iml	(date 1603966092327)
@@ -1,10 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$">
-      <excludeFolder url="file://$MODULE_DIR$/venv" />
-    </content>
-    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
+  <component name="PyDocumentationSettings">
+    <option name="format" value="PLAIN" />
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
 </module>
\ No newline at end of file
Index: oauth/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html>\n  <head>\n    <title>App Permissions Request</title>\n    <meta charset='utf-8'>\n    <link rel='stylesheet' type='text/css' href='/static/css/index.css'>\n    <script src='http://code.jquery.com/jquery-1.4.2.js'></script>\n  </head>\n  <body>\n    <section class='container'>\n      <div class='center content'>\n        <div class='spacer'></div>\n        <img src='/static/css/image.jpg' />\n        <div class='spacer'></div>\n        <div class='center'><h1>Grant App Access To Cisco Webex Teams</h1></div>\n        <div class='spacer-small'></div>\n        <div class='center'><a href='https://api.ciscospark.com/v1/authorize?client_id=APP_CLIENT_ID&response_type=code&redirect_uri=REDIRECT_URI&scope=spark%3Akms%20spark%3Apeople_read&state=STATE_STRING'><div class='button' style='width:512px;'>GRANT</div></a></div>\n  </body>\n</html>\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oauth/index.html	(revision 92f3492209677e9067e2e478bb91475d859c9798)
+++ oauth/index.html	(date 1602493562667)
@@ -14,7 +14,7 @@
         <div class='spacer'></div>
         <div class='center'><h1>Grant App Access To Cisco Webex Teams</h1></div>
         <div class='spacer-small'></div>
-        <div class='center'><a href='https://api.ciscospark.com/v1/authorize?client_id=APP_CLIENT_ID&response_type=code&redirect_uri=REDIRECT_URI&scope=spark%3Akms%20spark%3Apeople_read&state=STATE_STRING'><div class='button' style='width:512px;'>GRANT</div></a></div>
+        <div class='center'><a href='https://webexapis.com/v1/authorize?client_id=Cbbb54d9e35aa736ef45c2e21b3cef7d5d44f0dbf86535732768540c456e13b63&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A10060%2Foauth&scope=spark%3Akms%20spark%3Apeople_read&state=geht'><div class='button' style='width:512px;'>GRANT</div></a></div>
   </body>
 </html>
 
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1603966092367)
+++ .idea/vcs.xml	(date 1603966092367)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(date 1603966092361)
+++ .idea/inspectionProfiles/profiles_settings.xml	(date 1603966092361)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1603966092347)
+++ .idea/modules.xml	(date 1603966092347)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/WebexCallingProv.iml" filepath="$PROJECT_DIR$/.idea/WebexCallingProv.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
